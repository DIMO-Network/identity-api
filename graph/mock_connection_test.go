// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DIMO-Network/identity-api/graph (interfaces: ConnectionRepository)
//
// Generated by this command:
//
//	mockgen -destination=./mock_connection_test.go -package=graph github.com/DIMO-Network/identity-api/graph ConnectionRepository
//

// Package graph is a generated GoMock package.
package graph

import (
	context "context"
	reflect "reflect"

	model "github.com/DIMO-Network/identity-api/graph/model"
	gomock "go.uber.org/mock/gomock"
)

// MockConnectionRepository is a mock of ConnectionRepository interface.
type MockConnectionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionRepositoryMockRecorder
}

// MockConnectionRepositoryMockRecorder is the mock recorder for MockConnectionRepository.
type MockConnectionRepositoryMockRecorder struct {
	mock *MockConnectionRepository
}

// NewMockConnectionRepository creates a new mock instance.
func NewMockConnectionRepository(ctrl *gomock.Controller) *MockConnectionRepository {
	mock := &MockConnectionRepository{ctrl: ctrl}
	mock.recorder = &MockConnectionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectionRepository) EXPECT() *MockConnectionRepositoryMockRecorder {
	return m.recorder
}

// GetConnection mocks base method.
func (m *MockConnectionRepository) GetConnection(arg0 context.Context, arg1 model.ConnectionBy) (*model.Connection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnection", arg0, arg1)
	ret0, _ := ret[0].(*model.Connection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnection indicates an expected call of GetConnection.
func (mr *MockConnectionRepositoryMockRecorder) GetConnection(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnection", reflect.TypeOf((*MockConnectionRepository)(nil).GetConnection), arg0, arg1)
}

// GetConnections mocks base method.
func (m *MockConnectionRepository) GetConnections(arg0 context.Context, arg1 *int, arg2 *string, arg3 *int, arg4 *string) (*model.ConnectionConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnections", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*model.ConnectionConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnections indicates an expected call of GetConnections.
func (mr *MockConnectionRepositoryMockRecorder) GetConnections(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnections", reflect.TypeOf((*MockConnectionRepository)(nil).GetConnections), arg0, arg1, arg2, arg3, arg4)
}
