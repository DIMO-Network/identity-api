// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DIMO-Network/identity-api/graph (interfaces: DeviceDefinitionRepository)
//
// Generated by this command:
//
//	mockgen -destination=./mock_devicedefinition_test.go -package=graph github.com/DIMO-Network/identity-api/graph DeviceDefinitionRepository
//

// Package graph is a generated GoMock package.
package graph

import (
	context "context"
	reflect "reflect"

	model "github.com/DIMO-Network/identity-api/graph/model"
	gomock "go.uber.org/mock/gomock"
)

// MockDeviceDefinitionRepository is a mock of DeviceDefinitionRepository interface.
type MockDeviceDefinitionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceDefinitionRepositoryMockRecorder
}

// MockDeviceDefinitionRepositoryMockRecorder is the mock recorder for MockDeviceDefinitionRepository.
type MockDeviceDefinitionRepositoryMockRecorder struct {
	mock *MockDeviceDefinitionRepository
}

// NewMockDeviceDefinitionRepository creates a new mock instance.
func NewMockDeviceDefinitionRepository(ctrl *gomock.Controller) *MockDeviceDefinitionRepository {
	mock := &MockDeviceDefinitionRepository{ctrl: ctrl}
	mock.recorder = &MockDeviceDefinitionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceDefinitionRepository) EXPECT() *MockDeviceDefinitionRepositoryMockRecorder {
	return m.recorder
}

// GetDeviceDefinition mocks base method.
func (m *MockDeviceDefinitionRepository) GetDeviceDefinition(arg0 context.Context, arg1 model.DeviceDefinitionBy) (*model.DeviceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceDefinition", arg0, arg1)
	ret0, _ := ret[0].(*model.DeviceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceDefinition indicates an expected call of GetDeviceDefinition.
func (mr *MockDeviceDefinitionRepositoryMockRecorder) GetDeviceDefinition(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceDefinition", reflect.TypeOf((*MockDeviceDefinitionRepository)(nil).GetDeviceDefinition), arg0, arg1)
}

// GetDeviceDefinitions mocks base method.
func (m *MockDeviceDefinitionRepository) GetDeviceDefinitions(arg0 context.Context, arg1 *int, arg2 *string, arg3 *int, arg4 *string, arg5 *model.DeviceDefinitionFilter) (*model.DeviceDefinitionConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceDefinitions", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*model.DeviceDefinitionConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceDefinitions indicates an expected call of GetDeviceDefinitions.
func (mr *MockDeviceDefinitionRepositoryMockRecorder) GetDeviceDefinitions(arg0, arg1, arg2, arg3, arg4, arg5 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceDefinitions", reflect.TypeOf((*MockDeviceDefinitionRepository)(nil).GetDeviceDefinitions), arg0, arg1, arg2, arg3, arg4, arg5)
}
