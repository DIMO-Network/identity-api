// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/ethereum/go-ethereum/common"
)

type AftermarketDevice struct {
	ID       string          `json:"id"`
	Address  *common.Address `json:"address,omitempty"`
	Owner    *common.Address `json:"owner,omitempty"`
	Serial   *string         `json:"serial,omitempty"`
	Imei     *string         `json:"imei,omitempty"`
	MintedAt *time.Time      `json:"mintedAt,omitempty"`
}

type AftermarketDeviceConnection struct {
	TotalCount int                      `json:"totalCount"`
	Edges      []*AftermarketDeviceEdge `json:"edges"`
	PageInfo   *PageInfo                `json:"pageInfo"`
}

type AftermarketDeviceEdge struct {
	Cursor string             `json:"cursor"`
	Node   *AftermarketDevice `json:"node"`
}

type PageInfo struct {
	EndCursor   *string `json:"endCursor,omitempty"`
	HasNextPage bool    `json:"hasNextPage"`
}

type Privilege struct {
	ID        int            `json:"id"`
	User      common.Address `json:"user"`
	SetAt     time.Time      `json:"setAt"`
	ExpiresAt time.Time      `json:"expiresAt"`
}

type Vehicle struct {
	ID         string         `json:"id"`
	Owner      common.Address `json:"owner"`
	Make       *string        `json:"make,omitempty"`
	Model      *string        `json:"model,omitempty"`
	Year       *int           `json:"year,omitempty"`
	MintedAt   time.Time      `json:"mintedAt"`
	Privileges []*Privilege   `json:"privileges,omitempty"`
}

type VehicleConnection struct {
	TotalCount int            `json:"totalCount"`
	Edges      []*VehicleEdge `json:"edges"`
	PageInfo   *PageInfo      `json:"pageInfo"`
}

type VehicleEdge struct {
	Node   *Vehicle `json:"node"`
	Cursor string   `json:"cursor"`
}
