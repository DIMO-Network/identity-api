// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/ethereum/go-ethereum/common"
)

type AftermarketDevice struct {
	ID                string         `json:"id"`
	Address           common.Address `json:"address"`
	Owner             common.Address `json:"owner"`
	Serial            *string        `json:"serial,omitempty"`
	Imei              *string        `json:"imei,omitempty"`
	MintedAt          time.Time      `json:"mintedAt"`
	VehicleID         string         `json:"vehicle_id"`
	VehicleConnection *Vehicle       `json:"vehicleConnection,omitempty"`
}

type AftermarketDeviceConnection struct {
	TotalCount int                      `json:"totalCount"`
	Edges      []*AftermarketDeviceEdge `json:"edges,omitempty"`
	Devices    []*AftermarketDevice     `json:"devices,omitempty"`
	PageInfo   *PageInfo                `json:"pageInfo"`
}

type AftermarketDeviceEdge struct {
	Cursor string             `json:"cursor"`
	Node   *AftermarketDevice `json:"node,omitempty"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

type Vehicle struct {
	ID       string          `json:"id"`
	Owner    *common.Address `json:"owner,omitempty"`
	Make     *string         `json:"make,omitempty"`
	Model    *string         `json:"model,omitempty"`
	Year     *int            `json:"year,omitempty"`
	MintedAt *time.Time      `json:"mintedAt,omitempty"`
}

type VehicleConnection struct {
	TotalCount int            `json:"totalCount"`
	Edges      []*VehicleEdge `json:"edges"`
	PageInfo   *PageInfo      `json:"pageInfo"`
}

type VehicleEdge struct {
	Node   *Vehicle `json:"node"`
	Cursor string   `json:"cursor"`
}
